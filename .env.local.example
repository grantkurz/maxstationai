# Astria Vars (AI service)
# Get API key - https://www.astria.ai/users/edit#api
ASTRIA_API_KEY=your-astria-api-key
# If enabled, Astria will be enabled in test mode which will not charge you, but will return dummy results.
ASTRIA_TEST_MODE=true
PACK_QUERY_TYPE=both # Options: 'users', 'gallery', 'both'
NEXT_PUBLIC_TUNE_TYPE=packs #Options: 'packs', 'tune'


# This can be any random string, it is used to secure the webhook endpoint.
APP_WEBHOOK_SECRET=your-webhook-secret

# With vercel deploy supabase env vars are auto generated!
# Configure auth magic link & redirect urls > https://github.com/leap-ai/headshots-starter#5-magic-link-auth-supabase
# Locally get Supabase details from your project settings > API - https://app.supabase.com/project/_/settings/api
NEXT_PUBLIC_SUPABASE_URL=your-project-url
NEXT_PUBLIC_SUPABASE_ANON_KEY=your-anon-key
SUPABASE_SERVICE_ROLE_KEY=your-service-role-key

# VERCEL BLOB VARS (Image storage service)
BLOB_READ_WRITE_TOKEN=your-blob-read-write-token

# RESEND VARS (Email service)
RESEND_API_KEY=your-resend-api-key

# STRIPE VARS (Payment service)
STRIPE_SECRET_KEY=your-stripe-secret-key
STRIPE_WEBHOOK_SECRET=your-stripe-webhook-secret
STRIPE_PRICE_ID_ONE_CREDIT=your-stripe-price-id-one-credit
STRIPE_PRICE_ID_THREE_CREDITS=your-stripe-price-id-three-credit
STRIPE_PRICE_ID_FIVE_CREDITS=your-stripe-price-id-five-credit
NEXT_PUBLIC_STRIPE_IS_ENABLED=false # set to true to enable Stripe payments

# DEPLOYMENT
DEPLOYMENT_PROVIDER=vercel # or replit
DEPLOYMENT_URL=your-deployment-url # eg. headshots-starter.vercel.app to catch webhooks from Astria. Use ngrok locally (example: 0aaf-204-11-230-50.ngrok-free.app)

# Announcement Bar Configuration
NEXT_PUBLIC_ANNOUNCEMENT_ENABLED=true # set to true to enable the announcement bar
NEXT_PUBLIC_ANNOUNCEMENT_MESSAGE="ðŸŽ‰ We just improved our homepage, Packs now available and launched the image inspection feature!" # set the message to display in the announcement bar

# LinkedIn API Configuration (Social Media Integration)
# Get credentials from https://www.linkedin.com/developers/apps
# LinkedIn Owner URN format: urn:li:person:PERSON_ID or urn:li:organization:ORG_ID
#
# RECOMMENDED: Use refresh token for automatic token renewal
LINKEDIN_CLIENT_ID=your-app-client-id
LINKEDIN_CLIENT_SECRET=your-app-client-secret
LINKEDIN_REFRESH_TOKEN=your-refresh-token
LINKEDIN_OWNER_URN=your-linkedin-owner-urn
#
# OPTIONAL: Access token (will be auto-refreshed if refresh token is set)
# LINKEDIN_ACCESS_TOKEN=your-access-token

# Instagram API Configuration (Social Media Integration)
# Get credentials from https://developers.facebook.com/apps
# Instagram Graph API requires:
# 1. Facebook Page connected to Instagram Business Account
# 2. Page Access Token with instagram_basic and instagram_content_publish permissions
# 3. Instagram User ID (not the @username, but the numeric ID)
#
# To get Instagram User ID: GET https://graph.facebook.com/v21.0/me/accounts?access_token=YOUR_TOKEN
# Then: GET https://graph.facebook.com/v21.0/{page-id}?fields=instagram_business_account&access_token=YOUR_TOKEN
#
# Note: Access tokens can be long-lived (60 days) or permanent (for system users)
INSTAGRAM_USER_ID=your-instagram-user-id
INSTAGRAM_ACCESS_TOKEN=your-page-access-token
# Alternative: Use FB_PAGE_ACCESS_TOKEN if you prefer
# FB_PAGE_ACCESS_TOKEN=your-page-access-token

# Cron Job Configuration
# Generate a secure random string for cron job authentication
# Example: openssl rand -base64 32
CRON_SECRET=your-cron-secret-here

# X/Twitter API Configuration (Social Media Integration)
# Get credentials from https://developer.twitter.com/en/portal/dashboard
# You need to create a Twitter/X App with OAuth 1.0a credentials
TWITTER_API_KEY=your-twitter-api-key
TWITTER_API_SECRET=your-twitter-api-secret
TWITTER_ACCESS_TOKEN=your-twitter-access-token
TWITTER_ACCESS_SECRET=your-twitter-access-secret
